import{r as o,o as l,a as r,b as s,d as a,w as c,F as i,c as t,e as n}from"./app.f16f0893.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},b=t('<h1 id="tool" tabindex="-1"><a class="header-anchor" href="#tool" aria-hidden="true">#</a> Tool</h1><h2 id="create-strve-app" tabindex="-1"><a class="header-anchor" href="#create-strve-app" aria-hidden="true">#</a> create-strve-app</h2><p><a href="https://npmjs.com/package/create-strve-app"><img src="https://badgen.net/npm/v/create-strve-app" alt="npm package"></a></p>',3),d=n("A set of command line tools to quickly build Strve.js projects. Compared with the early scaffolding Create Strve, Create Strve App is better, you can directly enter commands to quickly create Strve projects. Create Strve App is built with "),m={href:"https://vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},h=n("Vite"),g=n(", which is a new front-end construction tool that can significantly improve the front-end development experience."),v=t(`<h3 id="scaffolding-your-first-strve-project" tabindex="-1"><a class="header-anchor" href="#scaffolding-your-first-strve-project" aria-hidden="true">#</a> Scaffolding Your First Strve Project</h3><h4 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> init strve-app@latest
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="yarn" tabindex="-1"><a class="header-anchor" href="#yarn" aria-hidden="true">#</a> yarn</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> create strve-app
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm" aria-hidden="true">#</a> pnpm</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">pnpm</span> create strve-app
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="choose-a-template" tabindex="-1"><a class="header-anchor" href="#choose-a-template" aria-hidden="true">#</a> Choose a template</h3><p>You can choose the corresponding template according to your needs.</p><ul><li>strve</li></ul><p>Only contains the basic functions of Strve.js. This template is suitable for applications that only have a single page in the project and do not jump to other pages.</p><ul><li>strve-apps</li></ul><p>Not only includes the basic functions of Strve.js, but also includes Strve Router, which is suitable for jumping multiple pages and slightly more complex applications.</p><h2 id="create-strve" tabindex="-1"><a class="header-anchor" href="#create-strve" aria-hidden="true">#</a> create-strve</h2><p><a href="https://npmjs.com/package/create-strve"><img src="https://badgen.net/npm/v/create-strve" alt="npm package"></a></p>`,15),f=n("We also briefly introduced before, Create Strve is a project construction tool based on Strve.js, you can use it to build pages more conveniently and flexibly. Create Strve is also built with "),y={href:"https://vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},w=n("Vite"),_=n("."),x=t(`<p>However, it is recommended to use Create Strve App here, which is more flexible and faster than installation.</p><h3 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h3><p><strong>Global installation</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> create-strve -g
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>View version</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create-strve -v
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Initialize the project</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>create-strve init <span class="token operator">&lt;</span>projectName<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="strve-router" tabindex="-1"><a class="header-anchor" href="#strve-router" aria-hidden="true">#</a> strve-router</h2><p><a href="https://npmjs.com/package/strve-router"><img src="https://badgen.net/npm/v/strve-router" alt="npm package"></a></p><p>Strve Router is the official route manager for Strve.js. It is deeply integrated with the core of Strve.js, making it easy to build single-page applications.</p><p>Currently only Hash mode is supported.</p><h3 id="started" tabindex="-1"><a class="header-anchor" href="#started" aria-hidden="true">#</a> Started</h3><p>The easiest way to try Strve Router is to use a direct import CDN link. You can open it in your browser and follow the example to learn some basic usage.</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>strve-router<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
			<span class="token keyword">import</span> <span class="token punctuation">{</span>
				h<span class="token punctuation">,</span>
				createApp<span class="token punctuation">,</span>
				setData<span class="token punctuation">,</span>
			<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://cdn.jsdelivr.net/npm/strvejs@3.2.0/dist/strve.esm.min.js&#39;</span><span class="token punctuation">;</span>
			<span class="token keyword">import</span> <span class="token punctuation">{</span>
				initRouter<span class="token punctuation">,</span>
				linkTo<span class="token punctuation">,</span>
			<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://cdn.jsdelivr.net/npm/strve-router@2.1.0/dist/strve-router.esm.js&#39;</span><span class="token punctuation">;</span>

			<span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token punctuation">{</span>
				<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
						<span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
					<span class="token punctuation">}</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token function-variable function">useAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
						<span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>

				<span class="token function-variable function">goAbout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token function">linkTo</span><span class="token punctuation">(</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>

				<span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span> h<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
                    &lt;button onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>goAbout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;goAbout&lt;/button&gt;
                    &lt;h1 onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>useAdd<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> $key&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h1&gt;
                </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">class</span> <span class="token class-name">About</span> <span class="token punctuation">{</span>
				<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
						<span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;About&#39;</span><span class="token punctuation">,</span>
					<span class="token punctuation">}</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span> h<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
                    &lt;button onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>goHome<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;goHome&lt;/button&gt;
                    &lt;h1 onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>useChange<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> $key&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>msg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h1&gt;
                </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>

				<span class="token function-variable function">useChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
						<span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">&#39;Changed&#39;</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>

				<span class="token function-variable function">goHome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token function">linkTo</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">initRouter</span><span class="token punctuation">(</span>
				<span class="token punctuation">[</span>
					<span class="token punctuation">{</span>
						<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
						<span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">[</span>Home<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token punctuation">{</span>
						<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
						<span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">[</span>About<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				setData
			<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> h<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            &lt;div class=&quot;main&quot;&gt;
                </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>router<span class="token punctuation">.</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
            &lt;/div&gt;
            </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
			app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><h3 id="install-1" tabindex="-1"><a class="header-anchor" href="#install-1" aria-hidden="true">#</a> Install</h3><h4 id="npm-1" tabindex="-1"><a class="header-anchor" href="#npm-1" aria-hidden="true">#</a> npm</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> strve-router
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="yarn-1" tabindex="-1"><a class="header-anchor" href="#yarn-1" aria-hidden="true">#</a> yarn</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> strve-router
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="pnpm-1" tabindex="-1"><a class="header-anchor" href="#pnpm-1" aria-hidden="true">#</a> pnpm</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> strve-router
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3>`,23),j=n("We have pre-installed the project configuration for you, you can use "),A=n("Create Strve App"),C=n(" to select the "),S=s("strong",null,"strve-apps",-1),q=n(" template."),T=s("h3",{id:"api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#api","aria-hidden":"true"},"#"),n(" API")],-1),H=s("h4",{id:"initrouter",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#initrouter","aria-hidden":"true"},"#"),n(" initRouter()")],-1),$=n("The first parameter is an array object, which is the routing component that needs to be registered, the "),D=s("code",null,"path",-1),R=n(" attribute represents the path of the component, the "),I=s("code",null,"template",-1),P=n(" attribute is an array, and the first item is the imported component (in accordance with "),V=n("Component-mode"),N=n("), the second item is the name of the rendered component function, such as "),F=s("code",null,"render",-1),O=n(" below."),E=t(`<p>The second parameter needs to be passed to the <code>setData</code> API, and the page that matches the corresponding path will be updated accordingly. For example, create an <code>index.js</code> file in a router folder here.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> setData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strvejs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> initRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strve-router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;../template/home&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">&#39;../template/about&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">initRouter</span><span class="token punctuation">(</span>
	<span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">[</span>Home<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">[</span>About<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	setData
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>The component matched by the route will be rendered to the place where the <code>view()</code> method is located, which is usually placed under the main page entry file (such as <code>App.js</code>).</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// App.js</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strvejs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router/index&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> h<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;div class=&#39;inner&#39;&gt;
          </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>router<span class="token punctuation">.</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        &lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="linkto" tabindex="-1"><a class="header-anchor" href="#linkto" aria-hidden="true">#</a> linkTo()</h4><p>If you need to jump to the corresponding page, use the <code>linkTo()</code> method, you can pass the corresponding path and parameters to be passed, or you can directly pass a path string.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> setData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strvejs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> linkTo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strve-router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">goAbout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">linkTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
				<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;maomin&#39;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> h<span class="token comment">/*html*/</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            &lt;button onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>goAbout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;goAbout&lt;/button&gt;
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="forward" tabindex="-1"><a class="header-anchor" href="#forward" aria-hidden="true">#</a> forward()</h4><p>Jump forward 1 page.</p><h4 id="back" tabindex="-1"><a class="header-anchor" href="#back" aria-hidden="true">#</a> back()</h4><p>Jump back 1 page.</p><h4 id="go-n" tabindex="-1"><a class="header-anchor" href="#go-n" aria-hidden="true">#</a> go(n)</h4><p>Jump forward n pages.</p><h4 id="toparse" tabindex="-1"><a class="header-anchor" href="#toparse" aria-hidden="true">#</a> toParse</h4><p>If you perform the operation of routing parameters, you want to get the parameter object. Object information can be obtained by directly executing the <code>toParse()</code> method.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> setData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strvejs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> linkTo<span class="token punctuation">,</span> toParse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;strve-router&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">About</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">goHome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">linkTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token function-variable function">getOption</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">toParse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> h<span class="token comment">/*html*/</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            &lt;button onClick=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>goHome<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;goHome&lt;/button&gt;
            &lt;h1 onClick=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>getOption<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;About&lt;/h1&gt;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="routerversion" tabindex="-1"><a class="header-anchor" href="#routerversion" aria-hidden="true">#</a> routerVersion</h4><p>Strve Router version information can be obtained.</p>`,18);function L(Y,B){const p=o("ExternalLinkIcon"),e=o("RouterLink");return l(),r(i,null,[b,s("p",null,[d,s("a",m,[h,a(p)]),g]),v,s("p",null,[f,s("a",y,[w,a(p)]),_]),x,s("p",null,[j,a(e,{to:"/tool/#create-strve-app"},{default:c(()=>[A]),_:1}),C,S,q]),T,H,s("p",null,[$,D,R,I,P,a(e,{to:"/usage/#component-mode"},{default:c(()=>[V]),_:1}),N,F,O]),E],64)}var W=u(k,[["render",L]]);export{W as default};
